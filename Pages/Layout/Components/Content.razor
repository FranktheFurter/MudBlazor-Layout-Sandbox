<div style="width: 100 %; height: 100%">
    <div style="">
        <MudTable Items="_items" Breakpoint="Breakpoint.Sm" Virtualize="false" FixedHeader="true">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Periodic Elements</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start"
                    AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Column1</MudTh>
                <MudTh>Column2</MudTh>
                <MudTh>Column3</MudTh>
                <MudTh>Column4</MudTh>
                <MudTh>Column5</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Column1">@context.Column1</MudTd>
                <MudTd DataLabel="Column2">@context.Column2</MudTd>
                <MudTd DataLabel="Column3">@context.Column3</MudTd>
                <MudTd DataLabel="Column4">@context.Column4</MudTd>
                <MudTd DataLabel="Column5">@context.Column5</MudTd>
            </RowTemplate>
        </MudTable>
    </div>
</div>

@code {
    private string searchString1 = "";
    public class TestItem
    {
        public string Column1 { get; set; }
        public string Column2 { get; set; }
        public string Column3 { get; set; }
        public string Column4 { get; set; }
        public string Column5 { get; set; }
    }


    private List<TestItem> _items;

    protected override void OnInitialized()
    {
        _items = new List<TestItem>();
        for (int i = 0; i < 2000; i++)
        {
            _items.Add(new TestItem
            {
                Column1 = $"Value_{i}",
                Column2 = $"Value_{i}",
                Column3 = $"Value_{i}",
                Column4 = $"Value_{i}",
                Column5 = $"Value_{i}",
            });
        }
    }

}